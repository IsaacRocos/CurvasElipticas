// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MPI.proto

#ifndef PROTOBUF_MPI_2eproto__INCLUDED
#define PROTOBUF_MPI_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MPI_2eproto();
void protobuf_AssignDesc_MPI_2eproto();
void protobuf_ShutdownFile_MPI_2eproto();

class Mensaje;
class DiffieParams;
class DiffiePunto;
class MSJSesion;
class MSJDialogo;

// ===================================================================

class Mensaje : public ::google::protobuf::Message {
 public:
  Mensaje();
  virtual ~Mensaje();

  Mensaje(const Mensaje& from);

  inline Mensaje& operator=(const Mensaje& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mensaje& default_instance();

  enum MsjsControlCase {
    kDprms = 2,
    kDpt = 3,
    kMsgsn = 4,
    kMsgd = 5,
    MSJSCONTROL_NOT_SET = 0,
  };

  void Swap(Mensaje* other);

  // implements Message ----------------------------------------------

  Mensaje* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mensaje& from);
  void MergeFrom(const Mensaje& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::int32 msg_id() const;
  inline void set_msg_id(::google::protobuf::int32 value);

  // optional .DiffieParams dprms = 2;
  inline bool has_dprms() const;
  inline void clear_dprms();
  static const int kDprmsFieldNumber = 2;
  inline const ::DiffieParams& dprms() const;
  inline ::DiffieParams* mutable_dprms();
  inline ::DiffieParams* release_dprms();
  inline void set_allocated_dprms(::DiffieParams* dprms);

  // optional .DiffiePunto dpt = 3;
  inline bool has_dpt() const;
  inline void clear_dpt();
  static const int kDptFieldNumber = 3;
  inline const ::DiffiePunto& dpt() const;
  inline ::DiffiePunto* mutable_dpt();
  inline ::DiffiePunto* release_dpt();
  inline void set_allocated_dpt(::DiffiePunto* dpt);

  // optional .MSJSesion msgsn = 4;
  inline bool has_msgsn() const;
  inline void clear_msgsn();
  static const int kMsgsnFieldNumber = 4;
  inline const ::MSJSesion& msgsn() const;
  inline ::MSJSesion* mutable_msgsn();
  inline ::MSJSesion* release_msgsn();
  inline void set_allocated_msgsn(::MSJSesion* msgsn);

  // optional .MSJDialogo msgd = 5;
  inline bool has_msgd() const;
  inline void clear_msgd();
  static const int kMsgdFieldNumber = 5;
  inline const ::MSJDialogo& msgd() const;
  inline ::MSJDialogo* mutable_msgd();
  inline ::MSJDialogo* release_msgd();
  inline void set_allocated_msgd(::MSJDialogo* msgd);

  inline MsjsControlCase msjsControl_case() const;
  // @@protoc_insertion_point(class_scope:Mensaje)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_dprms();
  inline void set_has_dpt();
  inline void set_has_msgsn();
  inline void set_has_msgd();

  inline bool has_msjsControl();
  void clear_msjsControl();
  inline void clear_has_msjsControl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 msg_id_;
  union MsjsControlUnion {
    ::DiffieParams* dprms_;
    ::DiffiePunto* dpt_;
    ::MSJSesion* msgsn_;
    ::MSJDialogo* msgd_;
  } msjsControl_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_MPI_2eproto();
  friend void protobuf_AssignDesc_MPI_2eproto();
  friend void protobuf_ShutdownFile_MPI_2eproto();

  void InitAsDefaultInstance();
  static Mensaje* default_instance_;
};
// -------------------------------------------------------------------

class DiffieParams : public ::google::protobuf::Message {
 public:
  DiffieParams();
  virtual ~DiffieParams();

  DiffieParams(const DiffieParams& from);

  inline DiffieParams& operator=(const DiffieParams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DiffieParams& default_instance();

  void Swap(DiffieParams* other);

  // implements Message ----------------------------------------------

  DiffieParams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DiffieParams& from);
  void MergeFrom(const DiffieParams& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 p = 1;
  inline bool has_p() const;
  inline void clear_p();
  static const int kPFieldNumber = 1;
  inline ::google::protobuf::int32 p() const;
  inline void set_p(::google::protobuf::int32 value);

  // required int32 a = 2;
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 2;
  inline ::google::protobuf::int32 a() const;
  inline void set_a(::google::protobuf::int32 value);

  // required int32 b = 3;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 3;
  inline ::google::protobuf::int32 b() const;
  inline void set_b(::google::protobuf::int32 value);

  // required int32 G_x = 4;
  inline bool has_g_x() const;
  inline void clear_g_x();
  static const int kGXFieldNumber = 4;
  inline ::google::protobuf::int32 g_x() const;
  inline void set_g_x(::google::protobuf::int32 value);

  // required int32 G_y = 5;
  inline bool has_g_y() const;
  inline void clear_g_y();
  static const int kGYFieldNumber = 5;
  inline ::google::protobuf::int32 g_y() const;
  inline void set_g_y(::google::protobuf::int32 value);

  // required int32 n = 6;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 6;
  inline ::google::protobuf::int32 n() const;
  inline void set_n(::google::protobuf::int32 value);

  // required int32 h = 7;
  inline bool has_h() const;
  inline void clear_h();
  static const int kHFieldNumber = 7;
  inline ::google::protobuf::int32 h() const;
  inline void set_h(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DiffieParams)
 private:
  inline void set_has_p();
  inline void clear_has_p();
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_g_x();
  inline void clear_has_g_x();
  inline void set_has_g_y();
  inline void clear_has_g_y();
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_h();
  inline void clear_has_h();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 p_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  ::google::protobuf::int32 g_x_;
  ::google::protobuf::int32 g_y_;
  ::google::protobuf::int32 n_;
  ::google::protobuf::int32 h_;
  friend void  protobuf_AddDesc_MPI_2eproto();
  friend void protobuf_AssignDesc_MPI_2eproto();
  friend void protobuf_ShutdownFile_MPI_2eproto();

  void InitAsDefaultInstance();
  static DiffieParams* default_instance_;
};
// -------------------------------------------------------------------

class DiffiePunto : public ::google::protobuf::Message {
 public:
  DiffiePunto();
  virtual ~DiffiePunto();

  DiffiePunto(const DiffiePunto& from);

  inline DiffiePunto& operator=(const DiffiePunto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DiffiePunto& default_instance();

  void Swap(DiffiePunto* other);

  // implements Message ----------------------------------------------

  DiffiePunto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DiffiePunto& from);
  void MergeFrom(const DiffiePunto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x_val = 1;
  inline bool has_x_val() const;
  inline void clear_x_val();
  static const int kXValFieldNumber = 1;
  inline ::google::protobuf::int32 x_val() const;
  inline void set_x_val(::google::protobuf::int32 value);

  // required int32 y_val = 2;
  inline bool has_y_val() const;
  inline void clear_y_val();
  static const int kYValFieldNumber = 2;
  inline ::google::protobuf::int32 y_val() const;
  inline void set_y_val(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DiffiePunto)
 private:
  inline void set_has_x_val();
  inline void clear_has_x_val();
  inline void set_has_y_val();
  inline void clear_has_y_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_val_;
  ::google::protobuf::int32 y_val_;
  friend void  protobuf_AddDesc_MPI_2eproto();
  friend void protobuf_AssignDesc_MPI_2eproto();
  friend void protobuf_ShutdownFile_MPI_2eproto();

  void InitAsDefaultInstance();
  static DiffiePunto* default_instance_;
};
// -------------------------------------------------------------------

class MSJSesion : public ::google::protobuf::Message {
 public:
  MSJSesion();
  virtual ~MSJSesion();

  MSJSesion(const MSJSesion& from);

  inline MSJSesion& operator=(const MSJSesion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSJSesion& default_instance();

  void Swap(MSJSesion* other);

  // implements Message ----------------------------------------------

  MSJSesion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSJSesion& from);
  void MergeFrom(const MSJSesion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 idEvento = 1;
  inline bool has_idevento() const;
  inline void clear_idevento();
  static const int kIdEventoFieldNumber = 1;
  inline ::google::protobuf::int32 idevento() const;
  inline void set_idevento(::google::protobuf::int32 value);

  // optional string usuario = 2;
  inline bool has_usuario() const;
  inline void clear_usuario();
  static const int kUsuarioFieldNumber = 2;
  inline const ::std::string& usuario() const;
  inline void set_usuario(const ::std::string& value);
  inline void set_usuario(const char* value);
  inline void set_usuario(const char* value, size_t size);
  inline ::std::string* mutable_usuario();
  inline ::std::string* release_usuario();
  inline void set_allocated_usuario(::std::string* usuario);

  // @@protoc_insertion_point(class_scope:MSJSesion)
 private:
  inline void set_has_idevento();
  inline void clear_has_idevento();
  inline void set_has_usuario();
  inline void clear_has_usuario();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* usuario_;
  ::google::protobuf::int32 idevento_;
  friend void  protobuf_AddDesc_MPI_2eproto();
  friend void protobuf_AssignDesc_MPI_2eproto();
  friend void protobuf_ShutdownFile_MPI_2eproto();

  void InitAsDefaultInstance();
  static MSJSesion* default_instance_;
};
// -------------------------------------------------------------------

class MSJDialogo : public ::google::protobuf::Message {
 public:
  MSJDialogo();
  virtual ~MSJDialogo();

  MSJDialogo(const MSJDialogo& from);

  inline MSJDialogo& operator=(const MSJDialogo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSJDialogo& default_instance();

  void Swap(MSJDialogo* other);

  // implements Message ----------------------------------------------

  MSJDialogo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSJDialogo& from);
  void MergeFrom(const MSJDialogo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:MSJDialogo)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* msg_;
  friend void  protobuf_AddDesc_MPI_2eproto();
  friend void protobuf_AssignDesc_MPI_2eproto();
  friend void protobuf_ShutdownFile_MPI_2eproto();

  void InitAsDefaultInstance();
  static MSJDialogo* default_instance_;
};
// ===================================================================


// ===================================================================

// Mensaje

// required int32 msg_id = 1;
inline bool Mensaje::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mensaje::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mensaje::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mensaje::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 Mensaje::msg_id() const {
  // @@protoc_insertion_point(field_get:Mensaje.msg_id)
  return msg_id_;
}
inline void Mensaje::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:Mensaje.msg_id)
}

// optional .DiffieParams dprms = 2;
inline bool Mensaje::has_dprms() const {
  return msjsControl_case() == kDprms;
}
inline void Mensaje::set_has_dprms() {
  _oneof_case_[0] = kDprms;
}
inline void Mensaje::clear_dprms() {
  if (has_dprms()) {
    delete msjsControl_.dprms_;
    clear_has_msjsControl();
  }
}
inline const ::DiffieParams& Mensaje::dprms() const {
  return has_dprms() ? *msjsControl_.dprms_
                      : ::DiffieParams::default_instance();
}
inline ::DiffieParams* Mensaje::mutable_dprms() {
  if (!has_dprms()) {
    clear_msjsControl();
    set_has_dprms();
    msjsControl_.dprms_ = new ::DiffieParams;
  }
  return msjsControl_.dprms_;
}
inline ::DiffieParams* Mensaje::release_dprms() {
  if (has_dprms()) {
    clear_has_msjsControl();
    ::DiffieParams* temp = msjsControl_.dprms_;
    msjsControl_.dprms_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Mensaje::set_allocated_dprms(::DiffieParams* dprms) {
  clear_msjsControl();
  if (dprms) {
    set_has_dprms();
    msjsControl_.dprms_ = dprms;
  }
}

// optional .DiffiePunto dpt = 3;
inline bool Mensaje::has_dpt() const {
  return msjsControl_case() == kDpt;
}
inline void Mensaje::set_has_dpt() {
  _oneof_case_[0] = kDpt;
}
inline void Mensaje::clear_dpt() {
  if (has_dpt()) {
    delete msjsControl_.dpt_;
    clear_has_msjsControl();
  }
}
inline const ::DiffiePunto& Mensaje::dpt() const {
  return has_dpt() ? *msjsControl_.dpt_
                      : ::DiffiePunto::default_instance();
}
inline ::DiffiePunto* Mensaje::mutable_dpt() {
  if (!has_dpt()) {
    clear_msjsControl();
    set_has_dpt();
    msjsControl_.dpt_ = new ::DiffiePunto;
  }
  return msjsControl_.dpt_;
}
inline ::DiffiePunto* Mensaje::release_dpt() {
  if (has_dpt()) {
    clear_has_msjsControl();
    ::DiffiePunto* temp = msjsControl_.dpt_;
    msjsControl_.dpt_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Mensaje::set_allocated_dpt(::DiffiePunto* dpt) {
  clear_msjsControl();
  if (dpt) {
    set_has_dpt();
    msjsControl_.dpt_ = dpt;
  }
}

// optional .MSJSesion msgsn = 4;
inline bool Mensaje::has_msgsn() const {
  return msjsControl_case() == kMsgsn;
}
inline void Mensaje::set_has_msgsn() {
  _oneof_case_[0] = kMsgsn;
}
inline void Mensaje::clear_msgsn() {
  if (has_msgsn()) {
    delete msjsControl_.msgsn_;
    clear_has_msjsControl();
  }
}
inline const ::MSJSesion& Mensaje::msgsn() const {
  return has_msgsn() ? *msjsControl_.msgsn_
                      : ::MSJSesion::default_instance();
}
inline ::MSJSesion* Mensaje::mutable_msgsn() {
  if (!has_msgsn()) {
    clear_msjsControl();
    set_has_msgsn();
    msjsControl_.msgsn_ = new ::MSJSesion;
  }
  return msjsControl_.msgsn_;
}
inline ::MSJSesion* Mensaje::release_msgsn() {
  if (has_msgsn()) {
    clear_has_msjsControl();
    ::MSJSesion* temp = msjsControl_.msgsn_;
    msjsControl_.msgsn_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Mensaje::set_allocated_msgsn(::MSJSesion* msgsn) {
  clear_msjsControl();
  if (msgsn) {
    set_has_msgsn();
    msjsControl_.msgsn_ = msgsn;
  }
}

// optional .MSJDialogo msgd = 5;
inline bool Mensaje::has_msgd() const {
  return msjsControl_case() == kMsgd;
}
inline void Mensaje::set_has_msgd() {
  _oneof_case_[0] = kMsgd;
}
inline void Mensaje::clear_msgd() {
  if (has_msgd()) {
    delete msjsControl_.msgd_;
    clear_has_msjsControl();
  }
}
inline const ::MSJDialogo& Mensaje::msgd() const {
  return has_msgd() ? *msjsControl_.msgd_
                      : ::MSJDialogo::default_instance();
}
inline ::MSJDialogo* Mensaje::mutable_msgd() {
  if (!has_msgd()) {
    clear_msjsControl();
    set_has_msgd();
    msjsControl_.msgd_ = new ::MSJDialogo;
  }
  return msjsControl_.msgd_;
}
inline ::MSJDialogo* Mensaje::release_msgd() {
  if (has_msgd()) {
    clear_has_msjsControl();
    ::MSJDialogo* temp = msjsControl_.msgd_;
    msjsControl_.msgd_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Mensaje::set_allocated_msgd(::MSJDialogo* msgd) {
  clear_msjsControl();
  if (msgd) {
    set_has_msgd();
    msjsControl_.msgd_ = msgd;
  }
}

inline bool Mensaje::has_msjsControl() {
  return msjsControl_case() != MSJSCONTROL_NOT_SET;
}
inline void Mensaje::clear_has_msjsControl() {
  _oneof_case_[0] = MSJSCONTROL_NOT_SET;
}
inline Mensaje::MsjsControlCase Mensaje::msjsControl_case() const {
  return Mensaje::MsjsControlCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DiffieParams

// required int32 p = 1;
inline bool DiffieParams::has_p() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DiffieParams::set_has_p() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DiffieParams::clear_has_p() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DiffieParams::clear_p() {
  p_ = 0;
  clear_has_p();
}
inline ::google::protobuf::int32 DiffieParams::p() const {
  // @@protoc_insertion_point(field_get:DiffieParams.p)
  return p_;
}
inline void DiffieParams::set_p(::google::protobuf::int32 value) {
  set_has_p();
  p_ = value;
  // @@protoc_insertion_point(field_set:DiffieParams.p)
}

// required int32 a = 2;
inline bool DiffieParams::has_a() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DiffieParams::set_has_a() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DiffieParams::clear_has_a() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DiffieParams::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline ::google::protobuf::int32 DiffieParams::a() const {
  // @@protoc_insertion_point(field_get:DiffieParams.a)
  return a_;
}
inline void DiffieParams::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:DiffieParams.a)
}

// required int32 b = 3;
inline bool DiffieParams::has_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DiffieParams::set_has_b() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DiffieParams::clear_has_b() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DiffieParams::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline ::google::protobuf::int32 DiffieParams::b() const {
  // @@protoc_insertion_point(field_get:DiffieParams.b)
  return b_;
}
inline void DiffieParams::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:DiffieParams.b)
}

// required int32 G_x = 4;
inline bool DiffieParams::has_g_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DiffieParams::set_has_g_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DiffieParams::clear_has_g_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DiffieParams::clear_g_x() {
  g_x_ = 0;
  clear_has_g_x();
}
inline ::google::protobuf::int32 DiffieParams::g_x() const {
  // @@protoc_insertion_point(field_get:DiffieParams.G_x)
  return g_x_;
}
inline void DiffieParams::set_g_x(::google::protobuf::int32 value) {
  set_has_g_x();
  g_x_ = value;
  // @@protoc_insertion_point(field_set:DiffieParams.G_x)
}

// required int32 G_y = 5;
inline bool DiffieParams::has_g_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DiffieParams::set_has_g_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DiffieParams::clear_has_g_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DiffieParams::clear_g_y() {
  g_y_ = 0;
  clear_has_g_y();
}
inline ::google::protobuf::int32 DiffieParams::g_y() const {
  // @@protoc_insertion_point(field_get:DiffieParams.G_y)
  return g_y_;
}
inline void DiffieParams::set_g_y(::google::protobuf::int32 value) {
  set_has_g_y();
  g_y_ = value;
  // @@protoc_insertion_point(field_set:DiffieParams.G_y)
}

// required int32 n = 6;
inline bool DiffieParams::has_n() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DiffieParams::set_has_n() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DiffieParams::clear_has_n() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DiffieParams::clear_n() {
  n_ = 0;
  clear_has_n();
}
inline ::google::protobuf::int32 DiffieParams::n() const {
  // @@protoc_insertion_point(field_get:DiffieParams.n)
  return n_;
}
inline void DiffieParams::set_n(::google::protobuf::int32 value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:DiffieParams.n)
}

// required int32 h = 7;
inline bool DiffieParams::has_h() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DiffieParams::set_has_h() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DiffieParams::clear_has_h() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DiffieParams::clear_h() {
  h_ = 0;
  clear_has_h();
}
inline ::google::protobuf::int32 DiffieParams::h() const {
  // @@protoc_insertion_point(field_get:DiffieParams.h)
  return h_;
}
inline void DiffieParams::set_h(::google::protobuf::int32 value) {
  set_has_h();
  h_ = value;
  // @@protoc_insertion_point(field_set:DiffieParams.h)
}

// -------------------------------------------------------------------

// DiffiePunto

// required int32 x_val = 1;
inline bool DiffiePunto::has_x_val() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DiffiePunto::set_has_x_val() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DiffiePunto::clear_has_x_val() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DiffiePunto::clear_x_val() {
  x_val_ = 0;
  clear_has_x_val();
}
inline ::google::protobuf::int32 DiffiePunto::x_val() const {
  // @@protoc_insertion_point(field_get:DiffiePunto.x_val)
  return x_val_;
}
inline void DiffiePunto::set_x_val(::google::protobuf::int32 value) {
  set_has_x_val();
  x_val_ = value;
  // @@protoc_insertion_point(field_set:DiffiePunto.x_val)
}

// required int32 y_val = 2;
inline bool DiffiePunto::has_y_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DiffiePunto::set_has_y_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DiffiePunto::clear_has_y_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DiffiePunto::clear_y_val() {
  y_val_ = 0;
  clear_has_y_val();
}
inline ::google::protobuf::int32 DiffiePunto::y_val() const {
  // @@protoc_insertion_point(field_get:DiffiePunto.y_val)
  return y_val_;
}
inline void DiffiePunto::set_y_val(::google::protobuf::int32 value) {
  set_has_y_val();
  y_val_ = value;
  // @@protoc_insertion_point(field_set:DiffiePunto.y_val)
}

// -------------------------------------------------------------------

// MSJSesion

// required int32 idEvento = 1;
inline bool MSJSesion::has_idevento() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSJSesion::set_has_idevento() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSJSesion::clear_has_idevento() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSJSesion::clear_idevento() {
  idevento_ = 0;
  clear_has_idevento();
}
inline ::google::protobuf::int32 MSJSesion::idevento() const {
  // @@protoc_insertion_point(field_get:MSJSesion.idEvento)
  return idevento_;
}
inline void MSJSesion::set_idevento(::google::protobuf::int32 value) {
  set_has_idevento();
  idevento_ = value;
  // @@protoc_insertion_point(field_set:MSJSesion.idEvento)
}

// optional string usuario = 2;
inline bool MSJSesion::has_usuario() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSJSesion::set_has_usuario() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSJSesion::clear_has_usuario() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSJSesion::clear_usuario() {
  if (usuario_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    usuario_->clear();
  }
  clear_has_usuario();
}
inline const ::std::string& MSJSesion::usuario() const {
  // @@protoc_insertion_point(field_get:MSJSesion.usuario)
  return *usuario_;
}
inline void MSJSesion::set_usuario(const ::std::string& value) {
  set_has_usuario();
  if (usuario_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    usuario_ = new ::std::string;
  }
  usuario_->assign(value);
  // @@protoc_insertion_point(field_set:MSJSesion.usuario)
}
inline void MSJSesion::set_usuario(const char* value) {
  set_has_usuario();
  if (usuario_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    usuario_ = new ::std::string;
  }
  usuario_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSJSesion.usuario)
}
inline void MSJSesion::set_usuario(const char* value, size_t size) {
  set_has_usuario();
  if (usuario_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    usuario_ = new ::std::string;
  }
  usuario_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSJSesion.usuario)
}
inline ::std::string* MSJSesion::mutable_usuario() {
  set_has_usuario();
  if (usuario_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    usuario_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSJSesion.usuario)
  return usuario_;
}
inline ::std::string* MSJSesion::release_usuario() {
  clear_has_usuario();
  if (usuario_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = usuario_;
    usuario_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSJSesion::set_allocated_usuario(::std::string* usuario) {
  if (usuario_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usuario_;
  }
  if (usuario) {
    set_has_usuario();
    usuario_ = usuario;
  } else {
    clear_has_usuario();
    usuario_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSJSesion.usuario)
}

// -------------------------------------------------------------------

// MSJDialogo

// required string msg = 1;
inline bool MSJDialogo::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSJDialogo::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSJDialogo::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSJDialogo::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& MSJDialogo::msg() const {
  // @@protoc_insertion_point(field_get:MSJDialogo.msg)
  return *msg_;
}
inline void MSJDialogo::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:MSJDialogo.msg)
}
inline void MSJDialogo::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:MSJDialogo.msg)
}
inline void MSJDialogo::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSJDialogo.msg)
}
inline ::std::string* MSJDialogo::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MSJDialogo.msg)
  return msg_;
}
inline ::std::string* MSJDialogo::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSJDialogo::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MSJDialogo.msg)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MPI_2eproto__INCLUDED
